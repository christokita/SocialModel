{
    "collab_server" : "",
    "contents" : "################################################################################\n#\n# Analyze Networks of Social Interactions\n#\n################################################################################\n\nrm(list = ls())\nsource(\"scripts/__Util__MASTER.R\")\nlibrary(RColorBrewer)\nlibrary(scales)\n\n\nfilename <- \"Sigma001-Eps001-Phi001-ConnectP01-Bias1.1\"\n\n# Cutoff for threshold ratio to allow easier plotting\nThreshCutoffValue <- 10\n\n####################\n# Compare entropies\n####################\n# Load social\nload(\"output/Rdata/Sigma001-Eps001-Phi001-ConnectP01-Bias1.1.Rdata\")\n\ngraphs <- unlist(groups_graphs, recursive = FALSE)\nthreshMat <- unlist(groups_thresh, recursive = FALSE)\nactMat <- unlist(groups_taskDist, recursive = FALSE)\n\nsocial_graphs <- lapply(1:length(graphs), function(i) {\n  # Calculated degree\n  degree <- rowSums(graphs[[i]])\n  degree <- as.data.frame(degree)\n  degree$Id <- row.names(degree)\n  # Calculate thresholds\n  thresh <- threshMat[[i]] %>% \n    as.data.frame(.) %>% \n    mutate(ThreshRatio = log(Thresh1 / Thresh2),\n           Id = row.names(.))\n  thresh$ThreshRatio[thresh$ThreshRatio > ThreshCutoffValue] <- Inf\n  thresh$ThreshRatio[thresh$ThreshRatio < -ThreshCutoffValue] <- -Inf\n  # Calculate actibity\n  activity <- actMat[[i]] %>% \n    as.data.frame(.) %>% \n    mutate(ActRatio = log(Task1 / Task2),\n           ActTotal = Task1 + Task2,\n           Id = row.names(.))\n  # Merge and return\n  mergedNodes <- merge(degree, thresh)\n  mergedNodes <- merge(mergedNodes, activity)\n  return(mergedNodes)\n})\n\nsocial_graphs <- do.call(\"rbind\", social_graphs)\n\n# Load fixed\nload(\"output/Rdata/Sigma001-FIXED-ConnectP01-Bias1.1.Rdata\")\n\ngraphs <- unlist(groups_graphs, recursive = FALSE)\nthreshMat <- unlist(groups_thresh, recursive = FALSE)\nactMat <- unlist(groups_taskDist, recursive = FALSE)\n\nfixed_graphs <- lapply(1:length(graphs), function(i) {\n  # Calculated degree\n  degree <- rowSums(graphs[[i]])\n  degree <- as.data.frame(degree)\n  degree$Id <- row.names(degree)\n  # Calculate thresholds\n  thresh <- threshMat[[i]] %>% \n    as.data.frame(.) %>% \n    mutate(ThreshRatio = log(Thresh1 / Thresh2),\n           Id = row.names(.))\n  thresh$ThreshRatio[thresh$ThreshRatio > ThreshCutoffValue] <- ThreshCutoffValue\n  thresh$ThreshRatio[thresh$ThreshRatio < -ThreshCutoffValue] <- -ThreshCutoffValue\n  # Calculate actibity\n  activity <- actMat[[i]] %>% \n    as.data.frame(.) %>% \n    mutate(ActRatio = log(Task1 / Task2),\n           ActTotal = Task1 + Task2,\n           Id = row.names(.))\n  # Merge and return\n  mergedNodes <- merge(degree, thresh)\n  mergedNodes <- merge(mergedNodes, activity)\n  return(mergedNodes)\n})\n\nfixed_graphs <- do.call(\"rbind\", fixed_graphs)\n\ntest <- combined_graphs %>% \n  filter(n == 100)\n\n# Comparing activity and degree, colored by threshold ratio\ngg_degree_act <- ggplot(data = social_graphs, \n                        aes(x = ActTotal, y = degree, colour = ThreshRatio, group = n)) +\n  geom_point(size = 0.5) +\n  theme_bw() +\n  scale_colour_gradient2(high = \"#d7191c\",\n                         mid = \"#ffffbf\", \n                         low = \"#2c7bb6\", \n                         midpoint = 0, \n                         limits = c(-2, 2),\n                         oob = squish) +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(size = 1, fill = NA)) +\n  xlab(\"Total Activity Level\") +\n  ylab(\"Total Degree\") +\n  facet_wrap( ~ n, scales = \"free_y\")\ngg_degree_act\nggsave(filename = \"output/NetworkDataPlots/Social_DegreeVsActivity.png\", width = 8, height = 6, units = \"in\", dpi = 600)\n\n\ngg_FIX_degree_act <- ggplot(data = fixed_graphs, \n                        aes(x = ActTotal, y = degree, colour = ThreshRatio, group = n)) +\n  geom_point() +\n  theme_bw() +\n  scale_colour_gradient2(high = \"#2c7bb6\",\n                         mid = \"#ffffbf\", \n                         low = \"#d7191c\", \n                         midpoint = 0, \n                         limits = c(-2, 2),\n                         oob = squish) +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(size = 1, fill = NA)) +\n  facet_wrap( ~ n, scales = \"free_y\")\ngg_FIX_degree_act\nggsave(filename = \"output/NetworkDataPlots/Fixed_DegreeVsActivity.png\", width = 8, height = 6, units = \"in\", dpi = 600)\n\n\ngg_thresh_degree <- ggplot(data = social_graphs, \n                        aes(x = ThreshRatio, y = degree, colour = ActTotal, group = n)) +\n  geom_point() +\n  theme_bw() +\n  scale_colour_gradient2(high = \"#6e016b\",\n                         mid = \"#8c6bb1\", \n                         low = \"#bfd3e6\", \n                         limits = c(0, 1),\n                         midpoint = 0.5,\n                         oob = squish) +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(size = 1, fill = NA)) +\n  facet_wrap( ~ n, scales = \"free_y\")\ngg_thresh_degree\n\n\ntest <- social_graphs %>% filter(n == 100)\nqplot(data = test, y = ThreshRatio, x = degree, color = ActTotal) + \n  theme_bw() +\n  scale_colour_gradient2(high = \"#00441b\", mid = \"#41ab5d\", low = \"#c7e9c0\", midpoint = 0.5, limits = c(0, 1)) +\n  theme(panel.grid = element_blank(),\n        panel.border = element_rect(size = 1, fill = NA))\n\n",
    "created" : 1511534870467.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "749833804",
    "id" : "FC285F39",
    "lastKnownWriteTime" : 1511820762,
    "last_content_update" : 1511820762962,
    "path" : "~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/AnalyzeNetworks.R",
    "project_path" : "scripts/AnalyzeNetworks.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}