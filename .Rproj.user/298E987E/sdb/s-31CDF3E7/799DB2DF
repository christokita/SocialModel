{
    "collab_server" : "",
    "contents" : "################################################################################\n#\n# Comparing various specialization plots\n#\n################################################################################\n\nrm(list = ls())\nsource(\"scripts/__Util__MASTER.R\")\nsource(\"scripts/3A_PrepPlotExperimentData.R\")\nlibrary(RColorBrewer)\nlibrary(scales)\n\n# load(\"output/SpecializationMetrics/Rdata/FixedDelta06Sigma01Eta7100reps.Rdata\")\n\n####################\n# Compare entropies\n####################\n# Unlist\nentropy <- unlist(groups_entropy, recursive = FALSE)\nentropy <- do.call(\"rbind\", entropy)  %>% \n  mutate(set = paste(n, replicate, sep = \"-\"))%>% \n  select(-Dsym, -Dyx) %>% \n  filter(n != 1)\n\n\n####################\n# Task Rank Correlation\n####################\n# Unlist\ntaskCorrTot <- do.call(\"rbind\", groups_taskCorr)\ntaskCorrTot <- taskCorrTot %>% \n  mutate(TaskMean = (Task1 + Task2) / 2) %>% \n  mutate(set = paste(n, replicate, sep = \"-\"))%>% \n  select(-Task1, -Task2)\n\n\n####################\n# Task Performance Specialization\n####################\ntaskSpec <- groups_specialization %>%\n  group_by(n, replicate) %>%\n  summarise(SpecMean = mean(TransSpec, na.rm = TRUE))  %>% # need to figure out how to deal with inactivity (NA values)\n  mutate(set = paste(n, replicate, sep = \"-\"))\n\n\n####################\n# Bind together and summarise\n####################\n# Bind\nmetrics <- merge(taskCorrTot, entropy)\nmetrics <- merge(metrics, taskSpec)\n\n# Summarise\nmetrics <- metrics %>% \n  melt(., id.vars = c(\"n\", \"replicate\", \"set\"))\n\nnames(metrics) <- c(\"n\", \"replicate\", \"set\", \"metric\", \"value\")\n\nmetrics <- metrics %>% \n  group_by(n, metric) %>% \n  summarise(Mean = mean(value),\n            SE = sd(value) / sqrt(length(value)))\n\nnames(metrics) <- c(\"n\", \"metric\", \"Mean\", \"SE\")\n\nlevels(metrics$metric) <-c(\"Rank Correlation\", \"Task Entropy\", \"Task Specialization\")\n\n####################\n# Plot\n####################\ngg_metric <- ggplot(data = metrics, aes(x = n, y = Mean, group = metric)) +\n  geom_hline(aes(yintercept = 0), \n             colour = \"grey30\",\n             size = 0.25) +\n  geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), \n                width = 0.7) +\n  geom_line(aes(y = Mean, linetype = metric)) +\n  geom_point(aes(y = Mean, fill = metric), \n             size = 1.5,\n             shape = 21) +\n  theme_classic() +\n  xlab(\"Group Size\") +\n  ylab(\"Value\") +\n  scale_y_continuous(limits = c(0, 1),\n                     breaks = seq(0, 1, 0.2)) +\n  scale_x_continuous(breaks = unique(metrics$n)) +\n  scale_fill_manual(name = \"Metric\",\n                    values = c(\"black\", \"white\", \"white\")) +\n  scale_linetype_manual(name = \"Metric\",\n                        values = c(\"solid\", \"dashed\", \"dotted\")) +\n  theme(legend.position = \"none\", \n        legend.title = element_text(size = 7, face = \"bold\"),\n        legend.key.height = unit(0.3, \"cm\"),\n        legend.key.width= unit(0.4, \"cm\"),\n        legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, \"cm\"),\n        legend.text = element_text(size = 10),\n        axis.text = element_text(size = 8),\n        axis.title = element_text(size = 10),\n        axis.ticks = element_line(size = 0.5),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8, face = \"italic\"),\n        strip.background = element_rect(fill = NA, colour = NA),\n        panel.spacing = unit(0.5, \"cm\")) +\n  facet_wrap(~ metric)\n\ngg_metric\n\nggsave(gg_metric, file = \"output/SpecializationPlots/Sigma01Epsilon1p06.png\", height = 2.1, width = 4, units = \"in\", dpi = 800)\n\n\n####################\n# Entropy vs Rank Correlation\n####################\n\n# Unlist\nentropy <- unlist(groups_entropy, recursive = FALSE)\nentropy <- do.call(\"rbind\", entropy)  %>% \n  mutate(set = paste(n, replicate, sep = \"-\"))\n\n# Unlist\ntaskCorrTot <- do.call(\"rbind\", groups_taskCorr)\ntaskCorrTot <- taskCorrTot %>% \n  mutate(TaskMean = (Task1 + Task2) / 2) %>% \n  mutate(set = paste(n, replicate, sep = \"-\"))%>% \n  select(-Task1, -Task2)\n\n# Speclialization vs Entropy at colony level\nentropy <- entropy %>% \n  mutate(colony = paste0(n, \"-\", replicate)) %>% \n  group_by(colony) %>% \n  summarize(Dsym = mean(Dsym),\n            Dyx = mean(Dyx),\n            Dxy = mean(Dxy))\ntaskEntrCorr <- taskCorrTot %>% \n  mutate(colony = paste0(n, \"-\", replicate)) %>% \n  merge(entropy) %>% \n  select(colony, n, replicate, TaskMean, Dxy) %>% \n  mutate(groupsize = factor(paste0(\"n = \", n), \n                            levels = c(\"n = 2\", \"n = 4\", \"n = 6\", \"n = 8\", \"n = 12\", \"n = 16\")))\n\npalette <- c(\"#F00924\", \"#F7A329\", \"#FDD545\", \"#027C2C\", \"#1D10F9\", \"#4C0E78\", \"#bdbdbd\", \"#525252\")\ngg_entrcorr <- ggplot(data = taskEntrCorr, aes(x = Dxy, y = TaskMean, col = groupsize)) +\n  geom_hline(data = taskCorrTot, \n             aes(yintercept = 0),\n             colour = \"grey30\",\n             size = 0.25) +\n  geom_point(alpha = 0.5,\n             size = 0.2) +\n  theme_bw() +\n  xlab(\"Task Entropy\") +\n  ylab(\"Rank Correlation\") +\n  scale_colour_manual(name = \"Group Size\", \n                      values = palette) +\n  scale_x_continuous(limits = c(0, 0.4),\n                     breaks = seq(0, 0.4, 0.2)) +\n  scale_y_continuous(limits = c(-0.5, 1)) +\n  theme(legend.position = \"none\", \n        legend.title = element_text(size = 7),\n        legend.key.height = unit(0.3, \"cm\"),\n        legend.key.width= unit(0.4, \"cm\"),\n        legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, \"cm\"),\n        legend.text = element_text(size = 6),\n        axis.text = element_text(size = 8),\n        axis.title = element_text(size = 10),\n        axis.ticks = element_line(size = 0.5),\n        panel.border = element_rect(fill = NA, size = 1),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 7, face = \"italic\"),\n        strip.background = element_rect(fill = NA, colour = NA),\n        panel.spacing = unit(0.5, \"cm\")) +\n  facet_wrap(~ groupsize) \n\ngg_entrcorr\n\nggsave(filename = \"output/SpecializationMetrics/Plots/EntropyVsCorrelation.png\", width = 4, height = 3, units = \"in\", dpi = 600)\n\n####################\n# Fitness related plots\n####################\n# Speclialization vs Total Activity at inidividual level\npalette <- c(\"#F00924\", \"#F7A329\", \"#FDD545\", \"#027C2C\", \"#1D10F9\", \"#4C0E78\", \"#bdbdbd\", \"#525252\") \n\ntaskDist <- unlist(groups_taskDist, recursive = FALSE)\ntaskDistTot <- do.call(\"rbind\", taskDist)\ntaskDistSpec <- taskDistTot %>% \n  mutate(Active = Task1 + Task2) %>% \n  merge(groups_specialization) %>% \n  filter(n > 1) %>% \n  mutate(groupsize = factor(paste0(\"Group size \", n), \n                            levels = c(\"Group size 2\", \"Group size 4\", \"Group size 6\", \"Group size 8\", \"Group size 12\", \"Group size 16\")))\n\ngg_actspec <- ggplot(data = taskDistSpec, aes(x = Active, y = TransSpec, colour = groupsize)) +\n  geom_hline(aes(yintercept = 0), \n             colour = \"grey30\",\n             size = 0.25) +\n  geom_point(alpha = 0.5, \n             size = 0.8,\n             stroke = 0) +\n  theme_bw() +\n  scale_colour_manual(name = \"Group Size\", \n                      values = palette) +\n  scale_y_continuous(limits = c(-0.2, 1)) +\n  scale_x_continuous(breaks = seq(0, 1, 0.2)) +\n  theme(legend.position = \"none\") +\n  xlab(\"Activity level\") +\n  ylab(\"Task consistency\") +\n  theme(legend.position = \"none\", \n        legend.title = element_text(size = 7),\n        legend.key.height = unit(0.3, \"cm\"),\n        legend.key.width= unit(0.4, \"cm\"),\n        legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, \"cm\"),\n        legend.text = element_text(size = 6),\n        axis.text = element_text(size = 8),\n        axis.title = element_text(size = 10),\n        axis.ticks = element_line(size = 0.5),\n        panel.border = element_rect(fill = NA, size = 1),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8, face = \"italic\"),\n        strip.background = element_rect(fill = NA, colour = NA),\n        panel.spacing = unit(0.5, \"cm\")) +\n  facet_wrap(~ groupsize)\n\ngg_actspec\n\nggsave(filename = \"output/SpecializationMetrics/Plots/SpecializationVsActivity.png\", width = 4, height = 3, units = \"in\", dpi = 800)\n\n\n\nmyPalette <- colorRampPalette(brewer.pal(9, \"Blues\"))\n\ngg_taskspec <- ggplot(data = taskDistSpec, aes(x = Task1, y = Task2, colour = TransSpec)) +\n  geom_point(alpha = 0.5,\n             size = 0.8,\n             stroke = 0) +\n  theme_bw() +\n  scale_color_gradientn(name = \"Task\\nconsistency\",\n                        colours = myPalette(5), values = c(0, 0.1, 0.3, 0.5, 1), oob = squish,\n                        breaks = seq(-1, 1, 0.2), limits = c(-0.2, 0.8)) +\n  scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.5)) +\n  scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.5)) +\n  theme(legend.position = \"none\") +\n  xlab(\"Task 1 activity\") +\n  ylab(\"Task 2 activity\") +\n  theme(legend.position = \"right\", \n        legend.title = element_text(size = 10),\n        legend.key.height = unit(0.4, \"cm\"),\n        legend.key.width= unit(0.3, \"cm\"),\n        legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, \"cm\"),\n        legend.text = element_text(size = 8),\n        axis.text = element_text(size = 8),\n        axis.title = element_text(size = 10),\n        axis.ticks = element_line(size = 0.5),\n        panel.border = element_rect(fill = NA, size = 1),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8, face = \"italic\"),\n        strip.background = element_rect(fill = NA, colour = NA),\n        panel.spacing = unit(0.5, \"cm\")) +\n  facet_wrap(~ groupsize)\n\ngg_taskspec\n\nggsave(filename = \"output/SpecializationMetrics/Plots/TasksVsSpecializationWithLegend.png\", width = 4, height = 3, units = \"in\", dpi = 800)\n\n",
    "created" : 1509330998046.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2480049531",
    "id" : "799DB2DF",
    "lastKnownWriteTime" : 1509546119,
    "last_content_update" : 1509546119118,
    "path" : "~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/ComparingSpecialization.R",
    "project_path" : "scripts/ComparingSpecialization.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}