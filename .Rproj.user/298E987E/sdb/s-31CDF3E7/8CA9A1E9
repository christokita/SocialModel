{
    "collab_server" : "",
    "contents" : "##################################################\n#\n# Social Information Probability\n#\n##################################################\n\n\n####################\n# Calculate probabilty \n####################\ncalcSocialProbMat <- function(SocialNetwork, UseThreshold, ThresholdMatrix, X_sub_g) {\n  # Calculate \"sum\" of task states/probs of neighbors\n  NeighborSums <- SocialNetwork %*% X_sub_g\n  # Calcuate divisor\n  if(UseThreshold == TRUE) {\n    # Calculate total degree plus threshold (used to divide neighbor sums)\n    divisor <- rowSums(SocialNetwork) + ThresholdMatrix\n  } else {\n    divisor <- rowSums(SocialNetwork)\n  }\n  # Calcualte task probability based on social neighbors\n  L <-  NeighborSums / divisor\n  # Fix unconnected nodes\n  L[is.na(L)] <- 0\n  # Return\n  colnames(L) <- paste0(\"SocProb\", 1:ncol(L))\n  rownames(L) <- paste0(\"v-\", 1:nrow(L))\n  return(L)\n}",
    "created" : 1509229418711.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3030017874",
    "id" : "8CA9A1E9",
    "lastKnownWriteTime" : 1493837697,
    "last_content_update" : 1493837697,
    "path" : "~/Documents/Research/Tarnita Lab/Self-Organized DOL/Original Model/archive/__Util_NeighborInfoFunctions.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}