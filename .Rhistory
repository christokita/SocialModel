return(to_retun)
})
#Calculate baseline probability of interaction
size_graph <- do.call("rbind", size_graph)
})
# Bind and return
interaction_info <- do.call("rbind", interaction_info)
interaction_info$Model <- run_names[run]
return(interaction_info)
})
# Bind
assort_data <- do.call('rbind', network_assort)
assort_data <- assort_data %>%
group_by(Model, n) %>%
summarise(Assort_mean = mean(Assortativity),
Assort_SD = sd(Assortativity),
Assort_SE = sd(Assortativity)/length(Assortativity))
assort_data$Model
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
# scale_y_continuous(breaks = seq(-0.25, 0.05, 0.05), limits = c(-0.26, 0.05)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.png",
height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.svg",
height = 46, width = 46, units = "mm")
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(0, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
View(mod_data)
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.00001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
table(mod_data$Modul_mean < -0.00001)
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
# scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.00001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.00001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.001, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0002, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0002, 0.010)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0002, 0.0105)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0002, 0.011)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.01, 0.002), limits = c(-0.0002, 0.0107)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.012, 0.002), limits = c(-0.0002, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.png",
height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.svg",
height = 46, width = 46, units = "mm")
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0,
size = 0.3) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.012, 0.002), limits = c(-0.0002, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.png",
height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.svg",
height = 46, width = 46, units = "mm")
network_assort <- lapply(1:length(runs), function(run) {
print(runs[run])
# Load social networks
files <- list.files(paste0("output/Rdata/_ProcessedData/Graphs/", runs[run], "/"), full.names = TRUE)
soc_networks <- list()
for (file in 1:length(files)) {
load(files[file])
soc_networks[[file]] <- listed_data
}
# Load threshold matrices
files <- list.files(paste0("output/Rdata/_ProcessedData/Thresh/", runs[run], "/"), full.names = TRUE)
thresh_data <- list()
for (file in 1:length(files)) {
load(files[file])
thresh_data[[file]] <- listed_data
}
# Loop through individual graphs
interaction_info <- lapply(1:length(soc_networks), function(i) {
print(i * 5)
# Get graphs
graphs <- soc_networks[[i]]
replicates <- length(graphs)
# For each each compute interaction matrix
# Get graph and make adjacency matrix
size_graph <- lapply(1:length(graphs), function(j) {
# Get graph and calculate threshold differences
this_graph <- graphs[[j]]
diag(this_graph) <- 0
thresh <- as.data.frame(thresh_data[[i]][j])
thresh$ThreshBias <- thresh$Thresh1 - thresh$Thresh2
# Calculate assortmnet
assort <- assortment.continuous(graph = this_graph, vertex_values = thresh$ThreshBias, weighted = T)
assort <- assort$r
to_retun <- data.frame(n = nrow(this_graph), Assortativity = assort)
# return
return(to_retun)
})
#Calculate baseline probability of interaction
size_graph <- do.call("rbind", size_graph)
})
# Bind and return
interaction_info <- do.call("rbind", interaction_info)
interaction_info$Model <- run_names[run]
return(interaction_info)
})
# Bind
assort_data <- do.call('rbind', network_assort)
assort_data <- assort_data %>%
group_by(Model, n) %>%
summarise(Assort_mean = mean(Assortativity),
Assort_SD = sd(Assortativity),
Assort_SE = sd(Assortativity)/length(Assortativity))
# Plot
gg_assort <- ggplot(data = assort_data, aes(x = n, y = Assort_mean,
colour = Model, group = Model, fill = Model)) +
geom_hline(yintercept = 0, color = "black", size = 0.3, linetype = "dotted") +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Assort_mean - Assort_SD, ymax = Assort_mean + Assort_SD),
width = 0,
size = 0.3) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(-0.25, 0.05, 0.05), limits = c(-0.26, 0.05)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Assortativity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_assort
ggsave(gg_assort, filename = "Output/Networks/NetworkMetrics/AssortmentCoeff.png",
height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_assort, filename = "Output/Networks/NetworkMetrics/AssortmentCoeff.svg",
height = 46, width = 46, units = "mm")
?fastgreedy.community
cluster_fast_greedy
fastgreedy.community
modularity <- lapply(1:length(runs), function(run) {
# Load social networks
files <- list.files(paste0("output/Rdata/_ProcessedData/Graphs/", runs[run], "/"), full.names = TRUE)
soc_networks <- list()
for (file in 1:length(files)) {
load(files[file])
soc_networks[[file]] <- listed_data
}
# Load threshold matrices
files <- list.files(paste0("output/Rdata/_ProcessedData/Thresh/", runs[run], "/"), full.names = TRUE)
thresh_data <- list()
for (file in 1:length(files)) {
load(files[file])
thresh_data[[file]] <- listed_data
}
# Loop through individual graphs
interaction_info <- lapply(1:length(soc_networks), function(i) {
# Get graphs
graphs <- soc_networks[[i]]
replicates <- length(graphs)
# For each each compute interaction matrix
# Get graph and make adjacency matrix
size_graph <- lapply(1:length(graphs), function(j) {
# Format: set diagonal, rescale, and make adj matrix
this_graph <- graphs[[j]]
diag(this_graph) <- 0
g <- graph_from_adjacency_matrix(this_graph, mode = "undirected", weighted = TRUE)
g_clust <- cluster_fast_greedy(g, weights = E(g)$weight)
# g_membership <- membership(g_clust)
# mod <- modularity(g, membership = g_membership, weights = E(g)$weight)
mod <- modularity(g_clust)
clust_coeff <- transitivity(graph = g, type = "weighted", weights = E(g)$weight)
# return
replicate_row <- data.frame(n = nrow(this_graph),
Modularity = mod,
ClustCoeff =  mean(clust_coeff, na.rm = TRUE))
return(replicate_row)
})
size_data <- do.call("rbind", size_graph)
})
# Bind and return
interaction_info <- do.call("rbind", interaction_info)
interaction_info$Model <- run_names[run]
return(interaction_info)
})
# Bind
mod_data <- do.call("rbind", modularity)
mod_data <- mod_data %>%
group_by(Model, n) %>%
summarise(Modul_mean = mean(Modularity),
Modul_SD = sd(Modularity),
Modul_SE = sd(Modularity)/length(Modularity))
# Plot
gg_mod <- ggplot(mod_data, aes(x = n, y = Modul_mean, colour = Model, fill = Model)) +
geom_line(size = 0.4) +
geom_errorbar(aes(ymin = Modul_mean - Modul_SD, ymax = Modul_mean + Modul_SD),
width = 0,
size = 0.3) +
geom_point(size = 0.8, shape = 21) +
scale_color_manual(name = "Threshold",
values = c("#878787", "#4d4d4d")) +
scale_fill_manual(name = "Threshold",
values = c("#ffffff", "#4d4d4d")) +
scale_linetype_manual(name = "Threshold",
values = c("dotted", "solid")) +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_y_continuous(breaks = seq(0, 0.012, 0.002), limits = c(-0.0002, 0.012)) +
xlab(expression(paste("Group Size (", italic(n), ")"))) +
ylab("Modularity") +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none",
legend.key.height = unit(0.5, "line"))
gg_mod
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.png",
height = 45, width = 45, units = "mm", dpi = 400)
gg_mod
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.png",
height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_mod, filename = "Output/Networks/NetworkMetrics/Modularity.svg",
height = 46, width = 46, units = "mm")
