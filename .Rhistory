# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1))
View(cumulative_dist)
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2))
View(cumulative_dist)
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1, y = Cumu_task1)) +
geom_point()
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1, y = Cumu_task1)) +
geom_point() +
theme_ctokita()
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1, y = Cumu_task1)) +
geom_point() +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1, y = Cumu_task1)) +
geom_point() +
theme_ctokita() +
facet_wrap(~n, scales = "free_x")
gg_cumsum
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1, y = mean_cum)) +
geom_point() +
theme_ctokita() +
facet_wrap(~n, scales = "free_x")
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1, y = mean_cum)) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0)
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2))
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1Cum) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point() +
theme_ctokita() +
facet_wrap(~n, scales = "free_x")
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point() +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
View(cumulative_summary)
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "lightblue") +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, color = "#bdbdbd", size = 0.1)
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, color = "#bdbdbd", size = 0.1) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n) +
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n) +
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#bdbdbd") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1Cum, y = Cumu_task1)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_boxplot() +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
gg_cumsum <- ggplot(data = cumulative_dist, aes(x = Rank_task1Cum, y = Cumu_task1, group = Rank_task1Cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_boxplot() +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
test <- cumulative_dist %>% filter(n == 100)
gg_cumsum <- ggplot(data = test, aes(x = Rank_task1Cum, y = Cumu_task1, group = Rank_task1Cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_boxplot() +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
gg_cumsum <- ggplot(data = test, aes(x = Rank_task1Cum, y = Cumu_task1, group = Rank_task1Cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_boxplot() +
scale_x_continuous(limits = c(0, 1)) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
View(test)
View(compiled_data)
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1),
Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
View(cumulative_dist)
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1),
Rank_task1 = dense_rank(Task1, Id),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
order(test$Task1)
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Rank_task1 = dense_rank(Task1),
Rank_task2 = dense_rank(Task2),
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2)) %>%
arrange(Rank_task1, .by_group = TRUE) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Rank_task2, .by_group = TRUE) %>%
mutate(Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
View(cumulative_summary)
View(cumulative_dist)
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE,
Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1))
View(cumulative_dist)
View(cumulative_dist)
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1))
View(cumulative_dist)
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1)) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Task2, Id, .by_group = TRUE) %>%
mutate(Rank_task2 = 1:length(Task1),
Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1Cum) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
test <- cumulative_dist %>% filter(n == 100)
gg_cumsum <- ggplot(data = test, aes(x = Rank_task1Cum, y = Cumu_task1, group = Rank_task1Cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_boxplot() +
scale_x_continuous(limits = c(0, 1)) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
View(test)
####################
# Load data
####################
load("output/Rdata/_ProcessedData/TaskDist/Sigma0.05-Epsilon0-Beta1.1.Rdata")
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1)) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Task2, Id, .by_group = TRUE) %>%
mutate(Rank_task2 = 1:length(Task1),
Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1Cum) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Load data
####################
load("output/Rdata/_ProcessedData/TaskDist/Sigma0.1-Epsilon0-Beta1.1.Rdata")
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1)) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Task2, Id, .by_group = TRUE) %>%
mutate(Rank_task2 = 1:length(Task1),
Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1Cum) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Load data
####################
load("output/Rdata/_ProcessedData/TaskDist/Sigma0.1-Epsilon0-Beta1.1-Delta0.6.Rdata")
####################
# Process data
####################
cumulative_dist <- compiled_data %>%
as.data.frame() %>%
group_by(n, sim, chunk) %>%
mutate(Id = 1:length(Task1)) %>%
arrange(Task1, Id, .by_group = TRUE) %>%
mutate(Cumu_task1 = Task1 / sum(Task1),
Cumu_task2 = Task2 / sum(Task2),
Rank_task1 = 1:length(Task1)) %>%
mutate(Cumu_task1 = cumsum(Cumu_task1),
Rank_task1Cum = Rank_task1/length(Rank_task1)) %>%
arrange(Task2, Id, .by_group = TRUE) %>%
mutate(Rank_task2 = 1:length(Task1),
Cumu_task2 = cumsum(Cumu_task2),
Rank_task2Cum = Rank_task2/length(Rank_task2))
# Summarise
cumulative_summary <- cumulative_dist %>%
group_by(n, Rank_task1Cum) %>%
summarise(mean_cum = mean(Cumu_task1),
SE_cum = sd(Cumu_task1) / sqrt(length(Cumu_task1)))
####################
# Plot
####################
gg_cumsum <- ggplot(data = cumulative_summary, aes(x = Rank_task1Cum, y = mean_cum)) +
geom_abline(slope = 1, intercept = 0, size = 0.1, color = "#737373") +
geom_errorbar(aes(ymax = mean_cum + SE_cum , ymin = mean_cum - SE_cum), width = 0) +
geom_point(color = "#045a8d", size = 0.5) +
theme_ctokita() +
facet_wrap(~n)
gg_cumsum
####################
# Prep for Parallelization
####################
# Create directory for depositing data
storage_path <- "/scratch/gpfs/ctokita/"
dir_name <- paste0("Sigma", (ThreshSD/ThreshM)[1], "-Epsilon", epsilon, "-Beta", beta, "-0Mean")
full_path <- paste0(storage_path, dir_name)
################################################################################
#
# Social interaction model: set for running on Della cluster
#
################################################################################
rm(list = ls())
####################
# Source necessary scripts/libraries
####################
source("scripts/util/__Util__MASTER.R")
library(parallel)
library(snowfall)
####################
# Set global variables
####################
# Initial paramters: Free to change
# Base parameters
Ns             <- seq(5, 100, 5) #vector of number of individuals to simulate
m              <- 2 #number of tasks
gens           <- 50000 #number of generations to run simulation
reps           <- 100 #number of replications per simulation (for ensemble)
chunk_size     <- 5 #number of simulations sent to single core
# Threshold Parameters
ThreshM        <- rep(0, m) #population threshold means
ThreshSD       <- ThreshM * 0 #population threshold standard deviations
InitialStim    <- rep(0, m) #intital vector of stimuli
deltas         <- rep(0.8, m) #vector of stimuli increase rates
alpha          <- m #efficiency of task performance
quitP          <- 0.2 #probability of quitting task once active
# Social Network Parameters
p              <- 1 #baseline probablity of initiating an interaction per time step
epsilon        <- 0 #relative weighting of social interactions for adjusting thresholds
beta           <- 1.1 #probability of interacting with individual in same state relative to others
####################
# Prep for Parallelization
####################
# Create directory for depositing data
storage_path <- "/scratch/gpfs/ctokita/"
dir_name <- paste0("Sigma", (ThreshSD/ThreshM)[1], "-Epsilon", epsilon, "-Beta", beta, "-0Mean")
full_path <- paste0(storage_path, dir_name)
full_path
# Seed internal thresholds
threshMat <- seed_thresholds(n = n,
m = m,
threshold_means = ThreshM,
threshold_sds = ThreshSD)
n
n = Ns[1]
# Seed internal thresholds
threshMat <- seed_thresholds(n = n,
m = m,
threshold_means = ThreshM,
threshold_sds = ThreshSD)
rtnorm(10, 0, 0)
rtnorm(10, 0, 0, lower = 0)
rtnorm(10, 0, 0, lower = -0.00001)
