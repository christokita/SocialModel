axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_entropy
ggsave(gg_entropy, file = "output/SpecializationPlots/Sigma0-Beta1.1-EpsSweep.png",
height = 45, width = 45, units = "mm", dpi = 800)
gg_entropy <- ggplot(data = entropy, aes(x = n, colour = Model)) +
geom_line(aes(y = Mean),
size = 0.4) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0) +
geom_point(aes(y = Mean),
size = 0.8) +
theme_classic() +
ylab("Division of Labor") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
scale_color_manual(values = pal,
labels = c("1.2", "1.1"),
name = expression("Interaction bias"(Beta))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(4, "mm"),
legend.key.width = unit(5, "mm"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_entropy
ggsave(gg_entropy, file = "output/SpecializationPlots/Sigma0-Beta1.1-EpsSweep.png",
height = 45, width = 45, units = "mm", dpi = 800)
rm(list = ls())
source("scripts/util/__Util__MASTER.R")
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Entropy.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Entropy.R', echo=TRUE)
####################
# Load data
####################
files <- list.file("output/Rdata/_ProcessedData/Stim/Sigma0-Epsilon0.1-Beta1.1/")
####################
# Load data
####################
files <- list.files("output/Rdata/_ProcessedData/Stim/Sigma0-Epsilon0.1-Beta1.1/", )
####################
# Load data
####################
files <- list.files("output/Rdata/_ProcessedData/Stim/Sigma0-Epsilon0.1-Beta1.1/", full.names = TRUE)
file <- files[1]
load(file)
replicate <- listed_data[[1]]
View(replicate)
head(replicate$s1)
replicate <- as.data.frame(replicate)
begin <- replicate[1:1000, ]
end <- replicate[(nrow(replicate)-1000):nrow(replicate), ]
View(begin)
begin <- replicate[2:1001, ] #first row is time 0
end <- replicate[(nrow(replicate)-1000):nrow(replicate), ]
nrow(replicate)
nrow(replicate)-1000)
(nrow(replicate)-1000)
end <- replicate[(nrow(replicate)-999):nrow(replicate), ]
tail(replicate, 10)
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(repliacte, 1000)
end <- tail(replicate, 1000)
repliacte <- replicate[-1, ]
replicate <- as.data.frame(replicate)
repliacte <- listed_data[[1]]
replicate <- as.data.frame(replicate)
replicate <- replicate[-1, ] #remove time step 0
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(replicate, 1000)
# Summarise
begin <- begin %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
View(begin)
end <- end %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
View(end)
diff <- being - end
diff <- begin - end
View(diff)
begin
end
diff <- end - begin
# Summarise within each replicate
rep_data <- lapply(listed_data, function(replicate) {
replicate <- as.data.frame(replicate)
replicate <- replicate[-1, ] #remove time step 0
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(replicate, 1000)
# Summarise
begin <- begin %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
end <- end %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
diff <- end - begin
return(diff)
})
rep_data
rep_data <- do.call('rbind', rep_data)
View(rep_data)
plot(rep_data$s1, rep_data$s2)
hist(rep_data$s1)
hist(rep_data$s2)
mean(rep_data$s1)
mean(rep_data$s2)
unite(rep_data, stim, c(s1, s2))
test <- unite(rep_data, stim, c(s1, s2))
View(test)
test <- rbind(rep_data$s1, rep_data$s2)
View(test)
test <- cbind(rep_data$s1, rep_data$s2)
View(test)
test <- c(rep_data$s1, rep_data$s2)
test
mean(test)
file
files
n <- as.numeric(gsub(".*/([0-9]+)\\.Rdata", "\\1", perl = T))
n <- as.numeric(gsub(".*/([0-9]+)\\.Rdata", "\\1", file, perl = T))
all_stim <- c(rep_data$s1, rep_data$s2)
to_return <- data.frame(sMean = mean(all_stim), sSD = sd(all_stim), sSE = sd(all_stim)/sqrt(length(all_stim)))
View(to_return)
hist(all_stim)
# Calculate statistics and return
to_return <- data.frame(n = n, sMean = mean(all_stim), sSD = sd(all_stim), sSE = sd(all_stim)/sqrt(length(all_stim)))
View(to_return)
stim_data <- lapply(files, function(file) {
# Load group size data
load(file)
n <- as.numeric(gsub(".*/([0-9]+)\\.Rdata", "\\1", file, perl = T))
# Summarise within each replicate
rep_data <- lapply(listed_data, function(replicate) {
replicate <- as.data.frame(replicate)
replicate <- replicate[-1, ] #remove time step 0
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(replicate, 1000)
# Summarise
begin <- begin %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
end <- end %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
diff <- end - begin
return(diff)
})
rep_data <- do.call('rbind', rep_data)
# Combine all stim data
all_stim <- c(rep_data$s1, rep_data$s2)
# Calculate statistics and return
to_return <- data.frame(n = n, sMean = mean(all_stim), sSD = sd(all_stim), sSE = sd(all_stim)/sqrt(length(all_stim)))
return(to_retun)
})
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Stimulus.R', echo=TRUE)
stim_data <- lapply(files, function(file) {
# Load group size data
load(file)
n <- as.numeric(gsub(".*/([0-9]+)\\.Rdata", "\\1", file, perl = T))
print(n)
# Summarise within each replicate
rep_data <- lapply(listed_data, function(replicate) {
replicate <- as.data.frame(replicate)
replicate <- replicate[-1, ] #remove time step 0
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(replicate, 1000)
# Summarise
begin <- begin %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
end <- end %>%
summarise(s1 = mean(s1),
s2 = mean(s2))
diff <- end - begin
return(diff)
})
rep_data <- do.call('rbind', rep_data)
# Combine all stim data
all_stim <- c(rep_data$s1, rep_data$s2)
# Calculate statistics and return
to_return <- data.frame(n = n, sMean = mean(all_stim), sSD = sd(all_stim), sSE = sd(all_stim)/sqrt(length(all_stim)))
return(to_return)
})
# Bind
test <- do.call("rbind", stim_data)
View(test)
# Bind
stim_data <- do.call("rbind", stim_data)
names(stim_data)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSE, yman = sMean + sSE)) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSE, ymax = sMean + sSE)) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Stimulus.R', echo=TRUE)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = s1Mean)) +
geom_errorbar(aes(ymin = s1Mean - s1SE, ymax = s1Mean + s1SE)) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = s2Mean)) +
geom_errorbar(aes(ymin = s2Mean - s2SE, ymax = s2Mean + s2SE)) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
rm(list = ls())
source("scripts/util/__Util__MASTER.R")
####################
# Load data and summarise
####################
files <- list.files("output/Rdata/_ProcessedData/Stim/Sigma0-Epsilon0.1-Beta1.1/", full.names = TRUE)
stim_data <- lapply(files, function(file) {
# Load group size data
load(file)
n <- as.numeric(gsub(".*/([0-9]+)\\.Rdata", "\\1", file, perl = T))
print(paste("Loaded: Group Size", n))
# Summarise within each replicate
rep_data <- lapply(listed_data, function(replicate) {
replicate <- as.data.frame(replicate)
replicate <- replicate[-1, ] #remove time step 0
replicate$sTotal <- replicate$s1 + replicate$s2
# Grab first and last 1000 time steps
begin <- head(replicate, 1000)
end <- tail(replicate, 1000)
# Summarise
begin <- begin %>%
summarise(s1 = mean(s1),
s2 = mean(s2),
sTotal = mean(sTotal))
end <- end %>%
summarise(s1 = mean(s1),
s2 = mean(s2),
sTotal = mean(sTotal))
diff <- end - begin
return(diff)
})
rep_data <- do.call('rbind', rep_data)
# Combine all stim data
all_stim <- c(rep_data$s1, rep_data$s2)
# Calculate statistics and return
to_return <- data.frame(n = n,
sMean = mean(rep_data$sTotal),
sSD = sd(rep_data$sTotal),
sSE = sd(rep_data$sTotal)/sqrt(nrow(rep_data)))
return(to_return)
})
# Bind
stim_data <- do.call("rbind", stim_data)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSE, ymax = sMean + sSE), width = 0) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD), width = 0) +
geom_point() +
theme_classic() +
ylab("Change in Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD), width = 0) +
geom_point() +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD), width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7, margin = margin(0, 0, 0, 0)),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7, margin = c(0, 0, 0, 0)),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6, margin = c(0, 0, 0, 0)),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title.y = element_text(size = 7, margin = c(0, 0, 0, 0)),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title.y = element_text(size = 7, margin = margin(0, 0, 0, 0)),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title.y = element_text(size = 7, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 7, margin = margin(0, 0, 0, 0)),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
####################
# Plot
####################
gg_stimdiff <- ggplot(stim_data, aes(x = n, y = sMean)) +
geom_errorbar(aes(ymin = sMean - sSD, ymax = sMean + sSD),
size = 0.3,
width = 0) +
geom_point(size = 0.8) +
theme_classic() +
ylab("Change in Total Stim. Level") +
scale_x_continuous(breaks = seq(0, 100, 20)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_stimdiff
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 400)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Entropy.R', echo=TRUE)
ggsave("output/StimLevels/ChangeInStimLevels.png", width = 45, height = 45, units = 'mm', dpi = 800)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_Stimulus.R', echo=TRUE)
