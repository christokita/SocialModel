expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD2CB", "#DAA2AD", "#BD7799", "#945687", "#5F3867", "#2D1E3F"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD2CB", "#DAA2AD", "#BD7799", "#945687", "#5F3867", "#2D1E3F"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
"white",
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#FBF1EF", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
max_color <- 0.1
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
max_color <- 0.08
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
max_color <- 0.03
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
max_color <- 0.04
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
max_color <- 0.05
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
max_color <- 0.04
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
max_color <- 0.03
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
scale_colour_gradientn(colours = c("white", "#EDD6CE", "#E2B3B6",
"#D298A6", "#BD7C9B", "#A1618C",
"#844C7D", "#5F3867", "#3C2650"),
limits = c(0, max_color),
oob = squish) +
# scale_fill_gradientn(colours = c("white", myPalette(100)),
#                      limits = c(0, max_color),
#                      oob = squish) +
# scale_colour_gradientn(colours =c("white", myPalette(100)),
#                        limits = c(0, max_color),
#                        oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 70, height = 40, units = "mm", dpi = 600)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_ThreshTime.R', echo=TRUE)
################################################################################
#
# Social interaction model: Sweep epsilon and group size parameter space
#
################################################################################
rm(list = ls())
####################
# Source necessary scripts/libraries
####################
source("scripts/util/__Util__MASTER.R")
library(parallel)
library(snowfall)
####################
# Set global variables
####################
# Initial paramters: Free to change
# Base parameters
Ns             <- seq(5, 100, 5) #vector of number of individuals to simulate
m              <- 2 #number of tasks
gens           <- 50000 #number of generations to run simulation
reps           <- 100 #number of replications per simulation (for ensemble)
# Threshold Parameters
ThreshM        <- rep(50, m) #population threshold means
ThreshSD       <- ThreshM * 0 #population threshold standard deviations
InitialStim    <- rep(0, m) #intital vector of stimuli
deltas         <- rep(0.8, m) #vector of stimuli increase rates
alpha          <- m #efficiency of task performance
quitP          <- 0.2 #probability of quitting task once active
# Social Network Parameters
p              <- 1 #baseline probablity of initiating an interaction per time step
epsilons       <- seq(-0.1, -0.025, 0.025) #relative weighting of social interactions for adjusting thresholds
beta           <- 1.1 #probability of interacting with individual in same state relative to others
