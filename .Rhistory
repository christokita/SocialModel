geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
####################
# Plot: Beta sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_beta <- ggplot(data = entropy, aes(x = n, y = beta, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(beta)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_beta
ggsave(gg_beta, file = "output/ParameterSpace/Plots/BetaGroupSizeSpace.png", height = 45, units = "mm", dpi = 400)
####################
# Load data
####################
load("output/ParameterSpace/GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/testing_scripts/Analyze_Sim_Length.R', echo=TRUE)
1/21
1/20
epsilons       <- seq(0.0, 0.2, 0.05) #relative weighting of social interactions for adjusting thresholds
epsilons       <- seq(0.25, 0.45, 0.05) #relative weighting of social interactions for adjusting thresholds
epsilons       <- seq(0.50, 0.70, 0.05) #relative weighting of social interactions for adjusting thresholds
epsilons       <- seq(0.75, 1.0, 0.05) #relative weighting of social interactions for adjusting thresholds
100/25
files <- list.file("output/Rdata/_GroupSizeEpsilonSweep_Sigma0-Beta1.1/", full.names = T)
files <- list.files("output/Rdata/_GroupSizeEpsilonSweep_Sigma0-Beta1.1/", full.names = T)
for (file in files) { load (file)
ifelse(!exists("entropy"), entropy <- entropy_data, entropy <- rbind(entropy, entropy_data))}
for (file in files) { load (file)
ifelse(!exists("entropy"), entropy <- entropy_sum, entropy <- rbind(entropy, entropy_sum))}
save(entropy, file = "output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
View(entropy)
####################
# Load Data: epsilon
####################
directory <- "output/Rdata/_GroupSizeEpsilonSweep_Sigma0-Beta1.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
epsilon <- as.numeric(gsub(".*epsilon([\\.0-9]+).Rdata", "\\1", file, perl = TRUE))
entropy_sum$epsilon <- epsilon
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
####################
# Load Data: epsilon
####################
directory <- "output/Rdata/_GroupSizeEpsilonSweep_Sigma0-Beta1.1/"
# List files
files <- list.files(directory, full.names = TRUE)
load(file)
View(entropy_sum)
epsilon <- as.numeric(gsub(".*epsilon([\\.0-9]+).Rdata", "\\1", file, perl = TRUE))
entropy_sum$epsilon <- epsilon
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
rm(entropy)
####################
# Load Data: epsilon
####################
directory <- "output/Rdata/_GroupSizeEpsilonSweep_Sigma0-Beta1.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
epsilon <- as.numeric(gsub(".*epsilon([\\.0-9]+).Rdata", "\\1", file, perl = TRUE))
entropy_sum$epsilon <- epsilon
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
save(entropy, file = "output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
####################
# Source necessary scripts/libraries
####################
source("scripts/util/__Util__MASTER.R")
library(RColorBrewer)
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
library(scales)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/3_AnalyzeParaSpace.R', echo=TRUE)
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
####################
# Load data
####################
load("output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
####################
# Load Data: beta
####################
directory <- "output/Rdata/_GroupSizeBetaSweep_Sigma0-Epsilon0.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
##########################################################################
rm(list = ls())
source("scripts/util/__Util__MASTER.R")
library(RColorBrewer)
library(scales)
####################
# Load Data: beta
####################
directory <- "output/Rdata/_GroupSizeBetaSweep_Sigma0-Epsilon0.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
save(entropy, file = "output/ParameterSpace/_GroupSizeBetaSweep_Sigma0-Epsilon0.1.Rdata")
####################
# Load data
####################
load("output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Beta sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_beta <- ggplot(data = entropy, aes(x = n, y = beta, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(beta)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_beta
View(entropy)
####################
# Load data
####################
load("output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Beta sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_beta <- ggplot(data = entropy, aes(x = n, y = beta, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(beta)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_beta
View(entropy)
####################
# Load Data: beta
####################
directory <- "output/Rdata/_GroupSizeBetaSweep_Sigma0-Epsilon0.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
rm(list = ls())
source("scripts/util/__Util__MASTER.R")
library(RColorBrewer)
library(scales)
####################
# Load Data: beta
####################
directory <- "output/Rdata/_GroupSizeBetaSweep_Sigma0-Epsilon0.1/"
# List files
files <- list.files(directory, full.names = TRUE)
for (file in files) {
load(file)
if (!exists("entropy")) {
entropy <- entropy_sum
} else {
entropy <- rbind(entropy, entropy_sum)
}
}
save(entropy, file = "output/ParameterSpace/_GroupSizeBetaSweep_Sigma0-Epsilon0.1.Rdata")
View(entropy)
####################
# Plot: Beta sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_beta <- ggplot(data = entropy, aes(x = n, y = beta, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(beta)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_beta
ggsave(gg_beta, file = "output/ParameterSpace/Plots/BetaGroupSizeSpace.png", height = 45, units = "mm", dpi = 400)
####################
# Load data
####################
load("output/ParameterSpace/_GroupSizeEpsilonSweep_Sigma0-Beta1.1.Rdata")
####################
# Plot: Epsilon sweep
####################
pal <- brewer_pal("seq", "YlGnBu")
pal <- pal(9)
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.05),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
gg_eps <- ggplot(data = entropy, aes(x = n, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_tile() +
theme_bw() +
scale_x_continuous(breaks = seq(0, 100, 20),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.2),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
ylab(expression(epsilon)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7,
face = "bold"),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
axis.ticks = element_line(size = 0.3),
panel.background = element_rect(fill = NA, size = 0.3),
aspect.ratio = 1)
gg_eps
ggsave(gg_eps, file = "output/ParameterSpace/Plots/EpsilonGroupSizeSpace.png", height = 45, units = "mm", dpi = 400)
