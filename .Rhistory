panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 5000),
labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 50),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 5000),
labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 10),
limits = c(0, 100),
labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 5000),
labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
label = comma,
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
label = comma,
expand = c(0,0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
label = comma,
expand = c(1, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(1, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
label = comma,
expand = c(0, 250)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0.5)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
#labels = c("0", rep("", 4), "25,000", rep("", 4), "50,000"),
label = comma,
expand = c(0, 10)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
#labels = c("0", rep("", 4), "50", rep("", 4), "100"),
expand = c(0, 0.5)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
# panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
maxz(group_data$time)
max(group_data$time)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_discrete(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
# panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_classic() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_discrete(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
# panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_classic() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
# panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_classic() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
# panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_classic() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
# panel.background = element_rect(fill = NA, size = 0.3, color = "black"),
axis.line = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/Analyze_ThreshTime.R', echo=TRUE)
group_sizes <- group_sizes[group_sizes %in% c("020", "025",
"030", "035",
"050")]
# Loop through group sizes
group_plots <- lapply(group_sizes, function(size) {
# Get subset of files that are for this group size
group_files <- files[grep(paste0(".*/", size, "-[0-9]+\\.Rdata"), files)]
# Loop through group files
group_data <- lapply(group_files, function(file) {
load(file)
print(paste("Loaded:", file))
# Loop through replicates and format
replicates <- lapply(data, function(replicate) {
replicate <- replicate %>%
select(t, Threshold)
return(replicate)
})
replicates <- do.call('rbind', replicates)
replicates <- replicates %>%
group_by(t) %>%
mutate(threshold = as.integer(as.character(cut(Threshold,
breaks = c(-Inf, seq(0, 100, 0.5)),
labels = seq(0, 100, 0.5))))) %>%
group_by(threshold) %>%
mutate(time = as.integer(as.character(cut(t,
breaks = c(seq(0, 50000, 250), Inf),
labels = seq(0, 50000, 250),
right = FALSE)))) %>%
group_by(time, threshold) %>%
summarise(count = length(threshold))
return(replicates)
})
# Bind
group_data <- do.call('rbind', group_data)
group_data <- group_data %>%
group_by(time, threshold) %>%
summarise(count = sum(count))
group_data$freq <- group_data$count/max(group_data$count)
# Plot
myPalette <- colorRampPalette(brewer.pal(9, "PuBu"))
gg_threshtime <- ggplot(data = group_data,
aes(x = time, y = threshold, fill = freq, colour = freq)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_colour_gradientn(colours = myPalette(100),
limits = c(0, 0.05),
oob = squish) +
scale_x_continuous(name = "Time step",
breaks = seq(0, 50000, 10000),
label = comma,
expand = c(0, 0)) +
scale_y_continuous(name = "Threshold",
breaks = seq(0, 100, 25),
limits = c(0, 100),
expand = c(0, 0)) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.position = "none",
axis.ticks = element_line(size = 0.2, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
panel.grid = element_blank(),
plot.margin = unit(c(0.2, 0.35, 0.1, 0.1), "cm"))
ggsave(gg_threshtime, file = paste0("output/ThresholdTime/ThreshTime_", size, ".png"), width = 90, height = 40, units = "mm", dpi = 600)
# smoothScatter(x = group_data$t, y = group_data$Threshold,
#               ylim = c(0, 100))
# plot(hexbin(x = group_data$t, y = group_data$Threshold, xbins = 30))
})
