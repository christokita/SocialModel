# epsilon_e11_e01_ratio = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_11 - E_12)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
eps_star_absolute$epsilon_all[eps_star_absolute$beta == 1.1]
eps_star_absolute <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta") %>%
filter(variable %in% c("E11", "E01", "E21"))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line() +
scale_y_continuous(limits = c(0.5, 1.3))
# Calculate epsilon* for absolute loss of DOL (test?)
n_1 <- delta/2 * n + 1
n_2 <- delta/2 * n - 1
eps_star_absolute <- data.frame(beta = beta,
E01 = rep(NA, length(beta)),
E02 = rep(NA, length(beta)),
E11 = rep(NA, length(beta)),
E12 = rep(NA, length(beta)),
E22 = rep(NA, length(beta)),
E21 = rep(NA, length(beta)),
epsilon_inac = rep(NA, length(beta)),
epsilon_ac = rep(NA, length(beta)),
# epsilon_e11_e01_ratio = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_11 - E_12)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
eps_star_absolute$epsilon_all[eps_star_absolute$beta == 1.1]
eps_star_absolute <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line() +
scale_y_continuous(limits = c(0.5, 1.3))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_discrete(values = c(rep("dashed", 2), rep("solid", 4)))
c(rep("dashed", 2), rep("solid", 4))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_discrete(value = c(rep("dashed", 2), rep("solid", 4)))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(value = c(rep("dashed", 2), rep("solid", 4)))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c(rep("dashed", 2), rep("solid", 4)))
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted") +
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")
)
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
ggplot(data = eps_star_absolute, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_absolute <- data.frame(beta = beta,
E01 = rep(NA, length(beta)),
E02 = rep(NA, length(beta)),
E11 = rep(NA, length(beta)),
E12 = rep(NA, length(beta)),
E22 = rep(NA, length(beta)),
E21 = rep(NA, length(beta)),
epsilon_inac = rep(NA, length(beta)),
epsilon_ac = rep(NA, length(beta)),
# epsilon_e11_e01_ratio = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_11 - E_12)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
eps_star_absolute$epsilon_all[eps_star_absolute$beta == 1.1]
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta") %>%
filter(variable %in% c("E11", "E01", "E21"))
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.1
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.4
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.5
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.8
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
(delta-(2*(n_2/n))
)
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.1
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.5
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.1
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look$value <- eps_star_look$value * 0.3
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value * 0.1
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value * 0.5
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value * 0.8
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
ggplot(data = eps_star_look, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.8), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = (0.8*epsilon_inac)), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_ac), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_ac*0.8), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_ac*2), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_ac*0.1), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.1), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.5), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.6), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.55), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.54), color = "blue")
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute <- data.frame(beta = beta,
E01 = rep(NA, length(beta)),
E02 = rep(NA, length(beta)),
E11 = rep(NA, length(beta)),
E12 = rep(NA, length(beta)),
E22 = rep(NA, length(beta)),
E21 = rep(NA, length(beta)),
epsilon_inac = rep(NA, length(beta)),
epsilon_ac = rep(NA, length(beta)),
epsilon_test = rep(NA, length(beta)),
# epsilon_e11_e01_ratio = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
eps_star_absolute$epsilon_all[eps_star_absolute$beta == 1.1]
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_inac*0.54), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test), color = "blue")
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- eps_delta_ac + eps_delta_inac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test), color = "blue")
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- delta * eps_delta_ac + (1-delta)*eps_delta_inac
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.5), color = "blue")
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- abs(delta * eps_delta_ac + (1-delta)*eps_delta_inac)
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.5), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.3), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.4), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.35), color = "blue")
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test*0.38), color = "blue")
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value * 0.5
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- abs(delta * eps_delta_ac + (1-delta)*eps_delta_inac)
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
eps_star_absolute$epsilon_all[eps_star_absolute$beta == 1.1]
eps_star_look <- eps_star_absolute %>%
select(-epsilon_inac, -epsilon_ac, -epsilon_all, -epsilon_test) %>%
melt(id.vars = "beta")
eps_star_look$value <- eps_star_look$value * 0.5
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- (E_11+E_01) - (E_22+E_02)
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test), color = "blue")
eps_star_absolute$epsilon_test <- (E_11+E_01+E_21) - (E_22+E_02+E_12)
for (i in 1:nrow(eps_star_absolute)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_02 <- n_2 / (n_2 + (n - n_2)) +  n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 2 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
E_12 <- n_2 / (beta[i] * (n_1 - 1) + (n - n_1)) + n_2 * ( (1) / (beta[i] * (n_2 - 1) + (n - n_2)) )  # expected number of interaction partners performing task 1 if i is task 1
E_22 <- 2*beta[i]*(n_2 - 1) / (beta[i] * (n_2 - 1) + (n - n_2)) # expected number of interaction partners performing task 2 if i is task 2
E_21 <- n_1 / (beta[i] * (n_2 - 1) + (n - n_1)) + n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is task 2
eps_star_absolute$E01[i] <- E_01
eps_star_absolute$E02[i] <- E_02
eps_star_absolute$E11[i] <- E_11
eps_star_absolute$E12[i] <- E_12
eps_star_absolute$E22[i] <- E_22
eps_star_absolute$E21[i] <- E_21
eps_delta_inac <- (E_01 - E_02)
eps_delta_ac <-  (E_21 - E_22)
eps_star_absolute$epsilon_inac[i] <- eps_delta_inac
eps_star_absolute$epsilon_ac[i] <- eps_delta_ac
eps_star_absolute$epsilon_test <- (E_11+E_01+E_21) - (E_22+E_02+E_12)
# eps_star_absolute$epsilon_all[i] <- delta / (freq_activ * (E_11 - E_12) + (1 - freq_activ) * (E_01 - E_02))
eps_star_absolute$epsilon_all[i] <- (delta-(2*(n_2/n))) / (delta*(eps_delta_ac) + (1-delta)*(eps_delta_inac))
}
ggplot(data = eps_star_absolute, aes(x = beta)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(y = epsilon_test), color = "blue")
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line(aes(linetype = variable)) +
scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#a6cee3", "#fb9a99", "#1f78b4", "#6a3d9a", "#e31a1c", "#6a3d9a"))
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line() +
# scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#6a3d9a", "#cab2d6", "#1f78b4", "#e31a1c", "#a6cee3", "#fb9a99"))
ggplot(data = eps_star_look, aes(x = beta, y = value, group = variable, col = variable)) +
geom_hline(yintercept = (delta-(2*(n_2/n)))) +
geom_line() +
# scale_linetype_manual(values = c("solid", "solid", "solid", "dashed", "solid", "dotted")) +
scale_colour_manual(values = c("#6a3d9a", "#cab2d6", "#1f78b4", "#fb9a99", "#a6cee3", "#e31a1c"))
