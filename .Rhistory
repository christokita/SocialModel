plot(taskTally$Task1)
plot(stimMat$s1)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s1)
plot(taskTally$Task1)
plot(threshMat)
plot(X_tot)
entropy
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
entropy
plot(X_tot)
plot(threshMat)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
entropy
plot(threshMat)
plot(stimMat$s1)
plot(stimMat$s2)
plot(taskTally$Task1)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(taskTally$Task1)
plot(stimMat$s2)
plot(stimMat$s1)
plot(threshMat)
plot(X_tot)
entropy
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
entropy
plot(X_tot)
plot(stimMat$s1)
deltas         <- rep(0.833, m) #vector of stimuli increase rates
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
threshMat
plot(threshMat)
plot(threshMat$Thresh1, threshMat$Thresh2)
plot(threshMat$Thresh1, threshMat$Thresh2, xlim = c(0, 100))
plot(threshMat$Thresh1, threshMat$Thresh2, xlim = c(0, 100), ylim = c(0,100))
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
X_tot
entropy
plot(X_tot)
X_tot/20000
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(X_tot)
plot(stimMat$s1)
plot(stimMat$s2)
plot(thresHMat)
plot(threshMat)
entropy
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
entropy
plot(threshMat)
plot(stimMat$s2)
plot(stimMat$s1)
plot(X_tot)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(X_tot)
entropy
plot(stimMat$s1)
plot(stimMat$s2)
plot(stimMat$s2, type = 'l')
plot(threshMat)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(threshMat)
plot(stimMat$s2, type = 'l')
plot(stimMat$s1, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s1, type = 'l')
plot(stimMat$s2, type = 'l')
plot(threshMat)
plot(X_tot)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(X_tot)
plot(threshMat)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(threshMat)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(threshMat)
plot(X_tot)
entropy
threshMat
plot(stimMat$s2, type = 'l')
plot(stimMat$s1, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s1, type = 'l')
plot(stimMat$s2, type = 'l')
threshMat
plot(threshMat)
plot(X_tot)
plot(stimMat$s2, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s2, type = 'l')
plot(stimMat$s1, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s2, type = 'l')
plot(stimMat$s1, type = 'l')
plot(X_tot)
entropy
plot(threshMat)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
thresh1time <- thresh1time %>%
mutate(t = 0:(nrow(.)-1)) %>%
gather("Id", "Threshold", 1:30)
threshMat <- threshMat %>%
as.data.frame(.) %>%
mutate(ThreshRatio = log(Thresh1 / Thresh2),
Id = row.names(.))
threshMat$ThreshRatio[threshMat$ThreshRatio > 10] <- 10
threshMat$ThreshRatio[threshMat$ThreshRatio < -10] <- -10
thresh1time <- merge(thresh1time, threshMat, by = "Id")
gg_thresh <- ggplot(data = thresh1time,
aes(x = t, y = Threshold)) +
theme_classic(base_size = 10) +
geom_line(aes(group = Id, colour = ThreshRatio), size = 0.2) +
scale_colour_gradient2(name = "ln(Threshold Ratio)",
high = "#d7191c",
# mid = "#ffffbf",
mid = "#cecece",
low = "#2c7bb6",
midpoint = 0,
limits = c(-5, 5),
oob = squish) +
scale_y_continuous(expand = c(0.0, 0)) +
theme(aspect.ratio = 1,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
axis.ticks.length = unit(4, "pt"),
axis.text = element_text(color = "black"))
gg_thresh
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat$s1, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
plot(stimMat$s1, type = 'l')
plot(stimMat$s2, type = 'l')
plot(taskTally$Task1)
plot(taskTally$Task1, type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel.R', echo=TRUE)
rm(list = ls())
source("scripts/__Util__MASTER.R")
####################
# Set global variables
####################
# Initial paramters: Free to change
# Base parameters
Ns             <- c(10) #vector of number of individuals to simulate
m              <- 2 #number of tasks
gens           <- 10000 #number of generations to run simulation
corrStep       <- 200 #number of time steps for calculation of correlation
reps           <- 1 #number of replications per simulation (for ensemble)
# Threshold Parameters
ThreshM        <- rep(50, m) #population threshold means
ThreshSD       <- ThreshM * 0.05 #population threshold standard deviations
InitialStim    <- rep(0, m) #intital vector of stimuli
deltas         <- rep(0.833, m) #vector of stimuli increase rates
alpha          <- m #efficiency of task performance
quitP          <- 0.2 #probability of quitting task once active
# Social Network Parameters
p              <- 1 #baseline probablity of initiating an interaction per time step
epsilon        <- 0.1 #relative weighting of social interactions for adjusting thresholds
beta           <- 1.1 #probability of interacting with individual in same state relative to others
####################
# Run simulation multiple times
####################
# Loop through group sizes
for (i in 1:length(Ns)) {
# Set group size
n <- Ns[i]
# Run Simulations
for (sim in 1:reps) {
####################
# Seed structures and intial matrices
####################
# Set initial probability matrix (P_g)
P_g <- matrix(data = rep(0, n * m), ncol = m)
# Seed task (external) stimuli
stimMat <- seed_stimuls(intitial_stim = InitialStim,
gens = gens)
# Seed internal thresholds
threshMat <- seed_thresholds(n = n,
m = m,
threshold_means = ThreshM,
threshold_sds = ThreshSD)
# Start task performance
X_g <- matrix(data = rep(0, length(P_g)), ncol = ncol(P_g))
# Create cumulative task performance matrix
X_tot <- X_g
# Create cumulative adjacency matrix
g_tot <-  matrix(data = rep(0, n * n), ncol = n)
colnames(g_tot) <- paste0("v-", 1:n)
rownames(g_tot) <- paste0("v-", 1:n)
# Prep correlation tracking matrix
thresh1time <- list()
thresh2time <- list()
thresh1time[[1]] <- threshMat[,1]
thresh2time[[2]] <- threshMat[,2]
####################
# Simulate
####################
# Run simulation
for (t in 1:gens) {
# Update stimuli
for (j in 1:ncol(stimMat)) {
# update stim
stimMat[t + 1, j] <- globalStimUpdate(stimulus = stimMat[t, j],
delta = deltas[j],
alpha = alpha,
Ni = sum(X_g[ , j]),
n = n)
}
# Calculate task demand based on global stimuli
P_g <- calc_determ_thresh(time_step = t + 1, # first row is generation 0
threshold_matrix = threshMat,
stimulus_matrix = stimMat)
# Update task performance
X_g <- updateTaskPerformance(P_sub_g    = P_g,
TaskMat    = X_g,
QuitProb   = quitP)
# Update social network (previously this was before probability/task update)
g_adj <- temporalNetwork(X_sub_g = X_g,
prob_interact = p,
bias = beta)
g_tot <- g_tot + g_adj
# Adjust thresholds
threshMat <- adjust_thresh_social(social_network = g_adj,
threshold_matrix = threshMat,
state_matrix = X_g,
epsilon = epsilon)
# threshMat <- adjust_thresholds_social_capped(SocialNetwork = g_adj,
#                                              ThresholdMatrix = threshMat,
#                                              X_sub_g = X_g,
#                                              epsilon = epsilon,
#                                              ThresholdMax = 2 * ThreshM[1])
thresh1time[[t + 1]] <- threshMat[,1]
thresh2time[[t + 1]] <- threshMat[,2]
# Update total task performance profile
X_tot <- X_tot + X_g
}
# Print simulation completed
print(paste0("DONE: N = ", n, ", Simulation ", sim))
}
}
library(RColorBrewer)
library(scales)
library(tidyr)
library(ggthemes)
thresh1time <- do.call("rbind", thresh1time)
row.names(thresh1time) <- NULL
thresh1time <- as.data.frame(thresh1time)
thresh1time <- thresh1time %>%
mutate(t = 0:(nrow(.)-1)) %>%
gather("Id", "Threshold", 1:10)
threshMat <- threshMat %>%
as.data.frame(.) %>%
mutate(ThreshRatio = log(Thresh1 / Thresh2),
Id = row.names(.))
threshMat$ThreshRatio[threshMat$ThreshRatio > 10] <- 10
threshMat$ThreshRatio[threshMat$ThreshRatio < -10] <- -10
thresh1time <- merge(thresh1time, threshMat, by = "Id")
gg_thresh <- ggplot(data = thresh1time,
aes(x = t, y = Threshold)) +
theme_classic(base_size = 10) +
geom_line(aes(group = Id, colour = ThreshRatio), size = 0.2) +
scale_colour_gradient2(name = "ln(Threshold Ratio)",
high = "#d7191c",
mid = "#ffffbf",
# mid = "#cecece",
low = "#2c7bb6",
midpoint = 0,
limits = c(-5, 5),
oob = squish) +
# scale_y_continuous(expand = c(0.0, 0), limits = c(5, 15)) +
theme(aspect.ratio = 1,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
axis.ticks.length = unit(4, "pt"),
axis.text = element_text(color = "black"))
gg_thresh
entropy <- mutualEntropy(TotalStateMat = X_tot)
# ggsave("output/ThresholdTime/Size100_Sigma0.0_TripleTimeLength.png", scale = 0.6, dpi = 600)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
stimMat
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
gg_thresh <- ggplot(data = thresh1time,
aes(x = t, y = Threshold)) +
theme_classic(base_size = 10) +
geom_line(aes(group = Id, colour = ThreshRatio), size = 0.2) +
scale_colour_gradient2(name = "ln(Threshold Ratio)",
high = "#d7191c",
mid = "#ffffbf",
# mid = "#cecece",
low = "#2c7bb6",
midpoint = 0,
limits = c(-5, 5),
oob = squish) +
scale_y_continuous(expand = c(0.0, 0), limits = c(0, 100)) +
theme(aspect.ratio = 1,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
axis.ticks.length = unit(4, "pt"),
axis.text = element_text(color = "black"))
gg_thresh
entropy
plot(stimMat[,1])
plot(stimMat[,2])
plot(threshMat)
plot(threshMat[,1:2])
task_probs <- P_g
state_matrix <- X_g
quit_prob <- tau
quit_prob <- quitP
# Create possible task space
tasks <- seq(1:ncol(task_probs))
tasks
task_probs
threshMat
stimMat
tail(stimMat)
threshMat
X_g
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,1], type = 'l')
plot(stimMat[,2], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,2], type = 'l')
X_g
task_probs <- P_g
state_matrix <- X_g
quit_prob <- quitP
task_probs
state_matrix
# Create possible task space
tasks <- seq(1:ncol(task_probs))
row = 1
sum(state_matrix[row, ]) == 0
quit_now <- sample(x = c("yes", "no"), size = 1, prob = c(quit_prob, (1 - quit_prob)))
state_matrix
inactive <- which(rowSums(state_matrix)==0)
# Find inactive and active rows
inactive <- which(rowSums(state_matrix) == 0)
active <- which(rowsums(state_matrix) != 0)
active <- which(rowSums(state_matrix) != 0)
# Calculate quitting
quit_or_not <- sample(c("yes", "no"), size = length(active), prob = c(quit_prob, 1 - quit_prob)
# Create possible task space
tasks <- seq(1:ncol(task_probs))
# Loop through individuals
for(row in 1:nrow(state_matrix)) {
# Inactive workers randomly sample one stimulus
if (sum(state_matrix[row, ]) == 0) {
# Sample task probability
tasks_order <- sample(x = tasks, size = length(tasks), replace = FALSE)
# Loop through tasks and go with first one that results in activity
for (task in tasks_order) {
prob <- task_probs[row, task]
activity <- sample(x = c(0, 1), size = 1, prob = c(1 - prob, prob))
if (activity == 1) {
state_matrix[row, task] <- activity
break
}
}
}
else { #active workers quit with certain probability
quit_now <- sample(x = c("yes", "no"), size = 1, prob = c(quit_prob, (1 - quit_prob)))
if (quit_now == "yes") {
state_matrix[row, ] <- 0
}
}
}
# Return
colnames(state_matrix) <- paste0("Task", 1:ncol(task_probs))
rownames(state_matrix) <- paste0("v-", 1:nrow(task_probs))
return(state_matrix)
}
# Calculate quitting
quit_or_not <- sample(c("yes", "no"), size = length(active), prob = c(quit_prob, 1 - quit_prob)
# Create possible task space
tasks <- seq(1:ncol(task_probs))
# Loop through individuals
for(row in 1:nrow(state_matrix)) {
# Inactive workers randomly sample one stimulus
if (sum(state_matrix[row, ]) == 0) {
# Sample task probability
tasks_order <- sample(x = tasks, size = length(tasks), replace = FALSE)
# Loop through tasks and go with first one that results in activity
for (task in tasks_order) {
prob <- task_probs[row, task]
activity <- sample(x = c(0, 1), size = 1, prob = c(1 - prob, prob))
if (activity == 1) {
state_matrix[row, task] <- activity
break
}
}
}
else { #active workers quit with certain probability
quit_now <- sample(x = c("yes", "no"), size = 1, prob = c(quit_prob, (1 - quit_prob)))
if (quit_now == "yes") {
state_matrix[row, ] <- 0
}
}
}
# Return
colnames(state_matrix) <- paste0("Task", 1:ncol(task_probs))
rownames(state_matrix) <- paste0("v-", 1:nrow(task_probs))
return(state_matrix)
}
# Calculate quitting
quit_or_not <- sample(c("yes", "no"), size = length(active), prob = c(quit_prob, 1 - quit_prob))
quit_or_not <- sample(x = c("yes", "no"),
prob = c(quit_prob, 1 - quit_prob),
size = length(active),
replace = TRUE)
quit_or_not
quit_prob
quit_or_not <- sample(x = c("yes", "no"),
prob = c(quit_prob, 1 - quit_prob),
size = length(active),
replace = TRUE)
quit_or_not
quit_or_not <- sample(x = c("yes", "no"),
prob = c(quit_prob, 1 - quit_prob),
size = length(active),
replace = TRUE)
quit_or_not
quitters <- active[quit_or_not == "yes"]
# Update active individuals: quit or not
quit_or_not <- sample(x = c("yes", "no"),
prob = c(quit_prob, 1 - quit_prob),
size = length(active),
replace = TRUE)
quitters <- active[quit_or_not == "yes"]
state_matrix
state_matrix[quitters] <- 0
state_matrix
state_matrix <- X_g
quitters <- active[quit_or_not == "yes"]
state_matrix[quitters, ] <- 0
state_matrix
X_g
task_probs
stim_matrix <- stimMat
timestep <- t
time_step <- t
t
nrow(stimMat)
stimMat
seedStimuls(InitialSVector = InitialStim,
gens = gens)
seed_stimuls(intitial_stim = InitialStim,
gens = gens)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,2], type = 'l')
plot(stimMat[,1], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,1], type = 'l')
plot(stimMat[,2], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,2], type = 'l')
plot(stimMat[,1], type = 'l')
entropy
plot(threshMat)
plot(threshMat[,1:2])
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,1], type = 'l')
plot(stimMat[,2], type = 'l')
entropy
plot(X_tot)
plot(threshMat[,1:2])
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
entorpy
entropy
plot(threshMat[,1:2])
plot(stimMat[,2], type = 'l')
plot(stimMat[,1], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
entropy
plot(stimMat[,1], type = 'l')
plot(stimMat[,2], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
plot(stimMat[,2], type = 'l')
plot(stimMat[,1], type = 'l')
threshMat
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
gg_thresh
entropy
plot(threshMat[,1:2])
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
entropy
plot(stimMat[,1], type = 'l')
plot(stimMat[,2], type = 'l')
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/1_SocThreshModel_TrackThresh.R', echo=TRUE)
entropy
X_tot
