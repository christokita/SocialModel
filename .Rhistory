# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.6, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.6) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.65), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.png", width = 45, height = 45, units = "mm", dpi = 300)
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.svg", width = 45, height = 45, units = "mm")
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.6, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.6) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
rm(list = ls())
####################
# Source necessary scripts/libraries
####################
source("scripts/util/__Util__MASTER.R")
####################
# calculate epsilon* and beta* for n = 80 with infinite threshold limit
####################
# Let's assume all individuals are doing task 1 (or are inactive)
# Set parameters
tau <- 0.2
n <- 80
m <- 2
n_1 <- ( 1 / (1 + tau) ) * n
delta <- 0.8
beta <- seq(1, 1.25, 0.0001)
beta_star_value <- (delta * n) / (delta * n - m)
# Calculate beta* and epsilon*
beta_star <- data.frame(epsilon = seq(0, 0.6, 0.01),
beta = rep(beta_star_value, length(seq(0, 0.6, 0.01))))
eps_star <- data.frame(beta = beta,
epsilon_inac = rep(NA, length(beta)),
epsilon_ac = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star)) {
E_01 <- n_1 * ( 1 / (beta[i] * (n_1 - 1) + (n - n_1)) ) # expected number of interaction partners performing task 1 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
eps_01 <- delta / E_01
eps_11 <- delta / E_11
eps_star$epsilon_inac[i] <- eps_01
eps_star$epsilon_ac[i] <- eps_11
eps_star$epsilon_all[i] <- (eps_11 * (1/(1+tau))) + (1-(1/(1+tau))) * eps_01
}
# Corner points for epsilon* polygon
eps_corner1 <- data.frame(beta = 1,
epsilon_inac = NA,
epsilon_ac = NA,
epsilon_all = 0.65)
eps_corner2 <- data.frame(beta = 1.25,
epsilon_inac = NA,
epsilon_ac = NA,
epsilon_all = 0.60)
eps_poly <- eps_corner1 %>%
rbind(eps_star) %>%
rbind(eps_corner2)
eps_poly$DOL <- 0
# Coner points for beta* points
beta_corner1 <- data.frame(epsilon = 0,
beta = 1)
beta_corner2 <- data.frame(epsilon = 0.60,
beta = 1)
beta_poly <- beta_corner1 %>%
rbind(beta_star) %>%
rbind(beta_corner2) %>%
mutate(Id = "BetaStar")
beta_poly$DOL <- 0
# DOL polygon
DOL_poly <- data.frame(beta = c(unique(beta_star$beta),
eps_star$beta[eps_star$beta >= unique(beta_star$beta)],
1.25),
epsilon = c(0, eps_star$epsilon_all[eps_star$beta >= unique(beta_star$beta)], 0))
DOL_poly$DOL <- 1
# Filter epsilon* and beta* lines
intersection_point <- max(eps_star$epsilon_all[eps_star$beta <= beta_star_value])
eps_star_out <- eps_star %>%
filter(beta < beta_star_value)
eps_star_in <- eps_star %>%
filter(beta >= beta_star_value)
beta_star_out <- beta_star %>%
filter(epsilon > intersection_point)
beta_star_in <- beta_star %>%
filter(epsilon <= intersection_point)
# Plot
pal <- brewer_pal("seq", "GnBu")
pal <- pal(9)
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.6, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.6) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
# Corner points for epsilon* polygon
eps_corner1 <- data.frame(beta = 1,
epsilon_inac = NA,
epsilon_ac = NA,
epsilon_all = 0.60)
eps_corner2 <- data.frame(beta = 1.25,
epsilon_inac = NA,
epsilon_ac = NA,
epsilon_all = 0.60)
eps_poly <- eps_corner1 %>%
rbind(eps_star) %>%
rbind(eps_corner2)
eps_poly$DOL <- 0
# Coner points for beta* points
beta_corner1 <- data.frame(epsilon = 0,
beta = 1)
beta_corner2 <- data.frame(epsilon = 0.60,
beta = 1)
beta_poly <- beta_corner1 %>%
rbind(beta_star) %>%
rbind(beta_corner2) %>%
mutate(Id = "BetaStar")
beta_poly$DOL <- 0
# DOL polygon
DOL_poly <- data.frame(beta = c(unique(beta_star$beta),
eps_star$beta[eps_star$beta >= unique(beta_star$beta)],
1.25),
epsilon = c(0, eps_star$epsilon_all[eps_star$beta >= unique(beta_star$beta)], 0))
DOL_poly$DOL <- 1
# Filter epsilon* and beta* lines
intersection_point <- max(eps_star$epsilon_all[eps_star$beta <= beta_star_value])
eps_star_out <- eps_star %>%
filter(beta < beta_star_value)
eps_star_in <- eps_star %>%
filter(beta >= beta_star_value)
beta_star_out <- beta_star %>%
filter(epsilon > intersection_point)
beta_star_in <- beta_star %>%
filter(epsilon <= intersection_point)
# Plot
pal <- brewer_pal("seq", "GnBu")
pal <- pal(9)
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.6, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.6) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.png", width = 45, height = 45, units = "mm", dpi = 300)
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.svg", width = 45, height = 45, units = "mm")
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.png", width = 45, height = 45, units = "mm", dpi = 300)
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.svg", width = 45, height = 45, units = "mm")
zero_corner <- 0.025 #allow for plotting of no DOL near zero
# DOL polygon
DOL_poly <- data.frame(beta = c(unique(beta_star$beta),
eps_star$beta[eps_star$beta >= unique(beta_star$beta)],
1.25),
epsilon = c(zero_corner, eps_star$epsilon_all[eps_star$beta >= unique(beta_star$beta)], zero_corner))
DOL_poly$DOL <- 1
# Filter epsilon* and beta* lines
intersection_point <- max(eps_star$epsilon_all[eps_star$beta <= beta_star_value])
eps_star_out <- eps_star %>%
filter(beta < beta_star_value)
eps_star_in <- eps_star %>%
filter(beta >= beta_star_value)
beta_star_out <- beta_star %>%
filter(epsilon > intersection_point)
beta_star_in <- beta_star %>%
filter(epsilon <= intersection_point)
# Plot
pal <- brewer_pal("seq", "GnBu")
pal <- pal(9)
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/analytical_calcs/Calculate_eps-star.R', echo=TRUE)
# Polygon for zero DOL near zero epsilon
eps_low_poly <- data.frame(beta = c(1, 1, 1.25, 1.25),
epsilon_inac = NA,
epsilon_ac = NA,
epsilon_all = c(0, 0.01, 0.01, 0),
DOL = 0)
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = eps_low_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = eps_low_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
geom_hline(yintercept = 0.01, size = 0.3)
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = eps_low_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
geom_hline(yintercept = 0.01, size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.png", width = 45, height = 45, units = "mm", dpi = 300)
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.svg", width = 45, height = 45, units = "mm")
zero_corner <- 0.02
gg_analytical_betaeps <- ggplot() +
# geom_line(aes(y = epsilon_inac), color = "blue") +
# geom_line(aes(y = epsilon_ac), color = "red") +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = eps_low_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
geom_hline(yintercept = zero_corner, size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
source('~/Documents/Research/Tarnita Lab/Social Interaction DOL/SocialModel/scripts/analytical_calcs/Calculate_eps-star.R', echo=TRUE)
gg_analytical_betaeps <- ggplot() +
geom_polygon(data = eps_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_polygon(data = beta_poly, aes(x = beta, y = epsilon, fill = DOL)) +
geom_polygon(data = DOL_poly, aes(x = beta, y = epsilon, fill = DOL)) +
# geom_polygon(data = eps_low_poly, aes(x = beta, y = epsilon_all, fill = DOL)) +
geom_line(data = beta_star, aes(x = beta, y = epsilon), size = 0.3, linetype = "dashed") +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all), size = 0.3) +
# geom_hline(yintercept = zero_corner, size = 0.3) +
# geom_line(data = beta_star_out, aes(x = beta, y = epsilon), size = 0.6, linetype = "dotted") +
# geom_line(data = beta_star_in, aes(x = beta, y = epsilon), size = 0.6) +
# geom_line(data = eps_star_out, aes(x = beta, y = epsilon_all), size = 0.6, linetype = "dotted") +
# geom_line(data = eps_star_in, aes(x = beta, y = epsilon_all), size = 0.6) +
scale_x_continuous(breaks = seq(1, 1.25, 0.05), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1), expand = c(0, 0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text = element_text(color = "black", size = 6),
axis.title = element_text(size = 7),
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(colour = "black", fill = NA, size = 0.3),
legend.position = "none")
gg_analytical_betaeps
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.png", width = 45, height = 45, units = "mm", dpi = 300)
ggsave(gg_analytical_betaeps, file ="output/AnalyticalResults/BetaEps_AnalyticalSpace.svg", width = 45, height = 45, units = "mm")
# Here we are testing wehther the decrease in DOL at high levels of social influence
# is due to the upper limit on threhsold values. In this simulation, we put the upper bound
# for threshold at 1000, instead of the normal 100.
rm(list = ls())
source("scripts/util/__Util__MASTER.R")
# ------------------------------ DOL by epsilon----------------------
####################
# Load and process data
####################
load('output/Rdata/_ProcessedData/Entropy/Sigma0-Beta1.1_EpsSweep-NoThreshLimit.Rdata')
high_thresh <- compiled_data %>%
mutate(Model = "high_thresh") %>%
group_by(Model, epsilon, beta) %>%
summarise(Mean = mean(Dind),
SD = sd(Dind)) %>%
as.data.frame() %>%
mutate(epsilon = round(epsilon, digits = 3))
load("output/ParameterSpace/EpsilonBetaSweep-n80.Rdata")
normal_thresh <- entropy %>%
mutate(Model = "normal_thresh") %>%
filter(beta == 1.1) %>%
select(Model, epsilon, beta, Dind_mean, Dind_SD)
names(normal_thresh) <- c("Model", "epsilon", "beta", "Mean", "SD")
eps_values <- unique(normal_thresh$epsilon)
entropy_data <- rbind(high_thresh, normal_thresh)
entropy_data <- entropy_data %>%
filter(epsilon %in% eps_values)
####################
# Plot entropy plots
####################
gg_comp <- ggplot(entropy_data, aes(x = epsilon, y = Mean, group = Model, color = Model)) +
geom_vline(xintercept = 0.5659957, size = 0.3, linetype = "dashed") + #analytical result for epsilon*
geom_vline(xintercept = 0, size = 0.3, linetype = "dashed") + #analytical result for epsilon*
geom_errorbar(aes(ymin = ifelse((Mean - SD) > 0, Mean - SD, 0), ymax = Mean + SD),
width = 0,
size = 0.3) +
geom_point(aes(y = Mean),
size = 0.8) +
theme_classic() +
xlab(expression(paste("Social influence (", italic(epsilon), ")"))) +
ylab(expression(paste("Division of labor (", italic(D[indiv]), ")"))) +
scale_color_manual(name = "Thresh. limits",
values = c("#a6cee3", "#1f78b4"),
labels = c(expression(paste("[0, ", infinity, ")")), "[0, 100]")) +
# ggtitle(expression(paste(italic(epsilon), "= 0.4, ", italic(beta), "= 1.1"))) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1)) +
theme(title = element_text(size = 6),
axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7, face = "italic"),
legend.position = c(0.3, 0.2),
legend.title = element_text(size = 6,
face = "bold",
hjust = 5),
legend.text = element_text(size = 6),
legend.key.height = unit(2, "mm"),
legend.key.width = unit(3, "mm"),
legend.background = element_blank(),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3, color = "black"),
aspect.ratio = 1)
gg_comp
ggsave(gg_comp, file = "output/SpecializationPlots/ThresholdLimitComparison.png", height = 45, width = 45, units = "mm")
ggsave(gg_comp, file = "output/SpecializationPlots/ThresholdLimitComparison.svg", height = 45, width = 45, units = "mm")
