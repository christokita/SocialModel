n <- 80
m <- 2
delta <- 0.8
beta <- seq(1, 1.25, 0.0001)
freq_activ <- delta
# freq_activ <- 1 / (1+tau)
n_1 <- freq_activ * n
beta_star_value <- (delta * n) / (delta * n - m)
# Calculate beta* and epsilon*
beta_star <- data.frame(epsilon = seq(0, 0.6, 0.01),
beta = rep(beta_star_value, length(seq(0, 0.6, 0.01))))
eps_star <- data.frame(beta = beta,
epsilon_inac = rep(NA, length(beta)),
epsilon_ac = rep(NA, length(beta)),
# epsilon_e11_e01_ratio = rep(NA, length(beta)),
epsilon_all = rep(NA, length(beta)))
for (i in 1:nrow(eps_star)) {
E_01 <- n_1 / (n_1 + (n - n_1)) +  n_1 * ( (1) / (beta[i] * (n_1 - 1) + (n - n_1)) )  # expected number of interaction partners performing task 1 if i is inactive
E_11 <- 2*beta[i]*(n_1 - 1) / (beta[i] * (n_1 - 1) + (n - n_1)) # expected number of interaction partners performing task 1 if i is task 1
eps_01 <- delta / E_01
eps_11 <- delta / E_11
eps_star$epsilon_inac[i] <- eps_01
eps_star$epsilon_ac[i] <- eps_11
eps_star$epsilon_all[i] <- delta / E_01
}
eps_star$epsilon_all[eps_star$beta == 1.02]
ggplot(data = eps_star, aes(x = beta)) +
geom_line(aes(y = epsilon_all)) +
geom_line(aes(y = epsilon_ac), color = "grey80") +
theme_ctokita()
save(eps_star, file = "output/AnalyticalResults/EpsStar-BetaStar_Calc.Rdata")
load("output/AnalyticalResults/EpsStar-BetaStar_Calc.Rdata")
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_vline(xintercept = unique(eps_star$beta)) +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
load("output/ParameterSpace/EpsilonBetaSweep-n80.Rdata")
pal <- brewer_pal("seq", "GnBu")
pal <- pal(9)
####################
# Plot: Positive Homophily only
####################
entropy_filtered <- entropy %>%
filter(beta >= 1,
epsilon >= 0)
load("output/AnalyticalResults/EpsStar-BetaStar_Calc.Rdata")
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_vline(xintercept = unique(eps_star$beta)) +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
save(eps_star, beta_star, file = "output/AnalyticalResults/EpsStar-BetaStar_Calc.Rdata")
load("output/AnalyticalResults/EpsStar-BetaStar_Calc.Rdata")
View(beta_star)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_vline(xintercept = unique(beta_star$beta)) +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_vline(xintercept = unique(beta_star$beta), size = 0.6, color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
names(eps_star)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all)) +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.6,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.6,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.6,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/BetaEpsSweep_n80.png", height = 45, width = 45, units = "mm", dpi = 400)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/BetaEpsSweep_n80.png", height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/svg/BetaEpsSweep_n80.svg", height = 45, width = 45, units = "mm")
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.6,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.6,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/BetaEpsSweep_n80.png", height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/svg/BetaEpsSweep_n80.svg", height = 45, width = 45, units = "mm")
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/BetaEpsSweep_n80.png", height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/svg/BetaEpsSweep_n80.svg", height = 45, width = 45, units = "mm")
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
geom_hline(xintercept = 0,
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
geom_hline(xintercept = 0,
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
geom_hline(xintercept = c(0),
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
geom_hline(xintercept = 0.0001,
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey60") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey60") +
geom_hline(yintercept = 0,
size = 0.3,
color = "grey60") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
# Graph
gg_betaeps <- ggplot() +
geom_tile(data = entropy_filtered, aes(x = beta, y = epsilon, fill = Dind_mean, colour = Dind_mean)) +
geom_line(data = eps_star, aes(x = beta, y = epsilon_all),
size = 0.3,
color = "grey40") +
geom_vline(xintercept = unique(beta_star$beta),
size = 0.3,
color = "grey40") +
geom_hline(yintercept = 0,
size = 0.3,
color = "grey40") +
theme_bw() +
scale_x_continuous(breaks = seq(1, 1.25, 0.05),
expand = c(0,0)) +
scale_y_continuous(breaks = seq(0, 0.6, 0.1),
expand = c(0,0)) +
scale_fill_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
scale_colour_gradientn(colours = pal, name = "Behavioral\nspecialization",
limits = c(0, 1)) +
xlab(expression(paste("Interaction Bias (", italic(beta), ")"))) +
ylab(expression(paste( "Social influence (", italic(epsilon), ")"))) +
theme(axis.text = element_text(colour = "black", size = 6),
axis.title = element_text(size = 7),
legend.title = element_text(size = 7),
legend.text = element_text(size = 6),
legend.key.height = unit(5, "mm"),
legend.key.width = unit(2, "mm"),
legend.position = "none",
axis.ticks = element_line(size = 0.3, color = "black"),
panel.border = element_rect(fill = NA, size = 0.3, color = "black"),
aspect.ratio = 1)
gg_betaeps
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/BetaEpsSweep_n80.png", height = 45, width = 45, units = "mm", dpi = 400)
ggsave(gg_betaeps, file = "output/ParameterSpace/Plots/svg/BetaEpsSweep_n80.svg", height = 45, width = 45, units = "mm")
